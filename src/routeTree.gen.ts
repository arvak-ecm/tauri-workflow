/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ThemeImport } from './routes/theme'
import { Route as LogoutImport } from './routes/logout'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as IndexImport } from './routes/index'
import { Route as VycHomeImport } from './routes/vyc/home'
import { Route as ThemeTypographyImport } from './routes/theme/typography'
import { Route as ThemeThemesImport } from './routes/theme/themes'
import { Route as ThemeSidebarImport } from './routes/theme/sidebar'
import { Route as ThemeOthersImport } from './routes/theme/others'
import { Route as VycAdminUsersImport } from './routes/vyc/admin/users'
import { Route as VycAdminRolesImport } from './routes/vyc/admin/roles'

// Create/Update Routes

const ThemeRoute = ThemeImport.update({
  id: '/theme',
  path: '/theme',
  getParentRoute: () => rootRoute,
} as any)

const LogoutRoute = LogoutImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const VycHomeRoute = VycHomeImport.update({
  id: '/vyc/home',
  path: '/vyc/home',
  getParentRoute: () => rootRoute,
} as any)

const ThemeTypographyRoute = ThemeTypographyImport.update({
  id: '/typography',
  path: '/typography',
  getParentRoute: () => ThemeRoute,
} as any)

const ThemeThemesRoute = ThemeThemesImport.update({
  id: '/themes',
  path: '/themes',
  getParentRoute: () => ThemeRoute,
} as any)

const ThemeSidebarRoute = ThemeSidebarImport.update({
  id: '/sidebar',
  path: '/sidebar',
  getParentRoute: () => ThemeRoute,
} as any)

const ThemeOthersRoute = ThemeOthersImport.update({
  id: '/others',
  path: '/others',
  getParentRoute: () => ThemeRoute,
} as any)

const VycAdminUsersRoute = VycAdminUsersImport.update({
  id: '/vyc/admin/users',
  path: '/vyc/admin/users',
  getParentRoute: () => rootRoute,
} as any)

const VycAdminRolesRoute = VycAdminRolesImport.update({
  id: '/vyc/admin/roles',
  path: '/vyc/admin/roles',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/logout': {
      id: '/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutImport
      parentRoute: typeof rootRoute
    }
    '/theme': {
      id: '/theme'
      path: '/theme'
      fullPath: '/theme'
      preLoaderRoute: typeof ThemeImport
      parentRoute: typeof rootRoute
    }
    '/theme/others': {
      id: '/theme/others'
      path: '/others'
      fullPath: '/theme/others'
      preLoaderRoute: typeof ThemeOthersImport
      parentRoute: typeof ThemeImport
    }
    '/theme/sidebar': {
      id: '/theme/sidebar'
      path: '/sidebar'
      fullPath: '/theme/sidebar'
      preLoaderRoute: typeof ThemeSidebarImport
      parentRoute: typeof ThemeImport
    }
    '/theme/themes': {
      id: '/theme/themes'
      path: '/themes'
      fullPath: '/theme/themes'
      preLoaderRoute: typeof ThemeThemesImport
      parentRoute: typeof ThemeImport
    }
    '/theme/typography': {
      id: '/theme/typography'
      path: '/typography'
      fullPath: '/theme/typography'
      preLoaderRoute: typeof ThemeTypographyImport
      parentRoute: typeof ThemeImport
    }
    '/vyc/home': {
      id: '/vyc/home'
      path: '/vyc/home'
      fullPath: '/vyc/home'
      preLoaderRoute: typeof VycHomeImport
      parentRoute: typeof rootRoute
    }
    '/vyc/admin/roles': {
      id: '/vyc/admin/roles'
      path: '/vyc/admin/roles'
      fullPath: '/vyc/admin/roles'
      preLoaderRoute: typeof VycAdminRolesImport
      parentRoute: typeof rootRoute
    }
    '/vyc/admin/users': {
      id: '/vyc/admin/users'
      path: '/vyc/admin/users'
      fullPath: '/vyc/admin/users'
      preLoaderRoute: typeof VycAdminUsersImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface ThemeRouteChildren {
  ThemeOthersRoute: typeof ThemeOthersRoute
  ThemeSidebarRoute: typeof ThemeSidebarRoute
  ThemeThemesRoute: typeof ThemeThemesRoute
  ThemeTypographyRoute: typeof ThemeTypographyRoute
}

const ThemeRouteChildren: ThemeRouteChildren = {
  ThemeOthersRoute: ThemeOthersRoute,
  ThemeSidebarRoute: ThemeSidebarRoute,
  ThemeThemesRoute: ThemeThemesRoute,
  ThemeTypographyRoute: ThemeTypographyRoute,
}

const ThemeRouteWithChildren = ThemeRoute._addFileChildren(ThemeRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/logout': typeof LogoutRoute
  '/theme': typeof ThemeRouteWithChildren
  '/theme/others': typeof ThemeOthersRoute
  '/theme/sidebar': typeof ThemeSidebarRoute
  '/theme/themes': typeof ThemeThemesRoute
  '/theme/typography': typeof ThemeTypographyRoute
  '/vyc/home': typeof VycHomeRoute
  '/vyc/admin/roles': typeof VycAdminRolesRoute
  '/vyc/admin/users': typeof VycAdminUsersRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/logout': typeof LogoutRoute
  '/theme': typeof ThemeRouteWithChildren
  '/theme/others': typeof ThemeOthersRoute
  '/theme/sidebar': typeof ThemeSidebarRoute
  '/theme/themes': typeof ThemeThemesRoute
  '/theme/typography': typeof ThemeTypographyRoute
  '/vyc/home': typeof VycHomeRoute
  '/vyc/admin/roles': typeof VycAdminRolesRoute
  '/vyc/admin/users': typeof VycAdminUsersRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/logout': typeof LogoutRoute
  '/theme': typeof ThemeRouteWithChildren
  '/theme/others': typeof ThemeOthersRoute
  '/theme/sidebar': typeof ThemeSidebarRoute
  '/theme/themes': typeof ThemeThemesRoute
  '/theme/typography': typeof ThemeTypographyRoute
  '/vyc/home': typeof VycHomeRoute
  '/vyc/admin/roles': typeof VycAdminRolesRoute
  '/vyc/admin/users': typeof VycAdminUsersRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/logout'
    | '/theme'
    | '/theme/others'
    | '/theme/sidebar'
    | '/theme/themes'
    | '/theme/typography'
    | '/vyc/home'
    | '/vyc/admin/roles'
    | '/vyc/admin/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/logout'
    | '/theme'
    | '/theme/others'
    | '/theme/sidebar'
    | '/theme/themes'
    | '/theme/typography'
    | '/vyc/home'
    | '/vyc/admin/roles'
    | '/vyc/admin/users'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/logout'
    | '/theme'
    | '/theme/others'
    | '/theme/sidebar'
    | '/theme/themes'
    | '/theme/typography'
    | '/vyc/home'
    | '/vyc/admin/roles'
    | '/vyc/admin/users'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRoute
  LogoutRoute: typeof LogoutRoute
  ThemeRoute: typeof ThemeRouteWithChildren
  VycHomeRoute: typeof VycHomeRoute
  VycAdminRolesRoute: typeof VycAdminRolesRoute
  VycAdminUsersRoute: typeof VycAdminUsersRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRoute,
  LogoutRoute: LogoutRoute,
  ThemeRoute: ThemeRouteWithChildren,
  VycHomeRoute: VycHomeRoute,
  VycAdminRolesRoute: VycAdminRolesRoute,
  VycAdminUsersRoute: VycAdminUsersRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/logout",
        "/theme",
        "/vyc/home",
        "/vyc/admin/roles",
        "/vyc/admin/users"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx"
    },
    "/logout": {
      "filePath": "logout.tsx"
    },
    "/theme": {
      "filePath": "theme.tsx",
      "children": [
        "/theme/others",
        "/theme/sidebar",
        "/theme/themes",
        "/theme/typography"
      ]
    },
    "/theme/others": {
      "filePath": "theme/others.tsx",
      "parent": "/theme"
    },
    "/theme/sidebar": {
      "filePath": "theme/sidebar.tsx",
      "parent": "/theme"
    },
    "/theme/themes": {
      "filePath": "theme/themes.tsx",
      "parent": "/theme"
    },
    "/theme/typography": {
      "filePath": "theme/typography.tsx",
      "parent": "/theme"
    },
    "/vyc/home": {
      "filePath": "vyc/home.tsx"
    },
    "/vyc/admin/roles": {
      "filePath": "vyc/admin/roles.tsx"
    },
    "/vyc/admin/users": {
      "filePath": "vyc/admin/users.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
